# Production Environment Configuration Template
# Copy this file to .env.production and configure with your production values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database URL (REQUIRED)
# Format: postgresql://username:password@host:port/database?sslmode=require
DATABASE_URL=postgresql://irrigation_user:STRONG_PASSWORD_HERE@db.example.com:5432/irrigation_prod?sslmode=require

# Database Connection Pool Settings
DB_POOL_MAX=20
DB_POOL_MIN=5
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=2000
DB_ACQUIRE_TIMEOUT=60000

# Database Monitoring
DB_MONITORING=true

# =============================================================================
# REDIS CACHE CONFIGURATION (OPTIONAL BUT RECOMMENDED)
# =============================================================================

# Redis Cache URL
# Format: redis://[:password@]host:port[/database]
# Set to 'disabled' to disable Redis caching (will fallback to in-memory cache)
REDIS_URL=redis://redis.example.com:6379/0
# REDIS_URL=disabled

# =============================================================================
# JWT & AUTHENTICATION CONFIGURATION (CRITICAL)
# =============================================================================

# JWT Secret - MUST be cryptographically secure random string (REQUIRED)
# Generate with: openssl rand -hex 64
JWT_SECRET=GENERATE_SECURE_64_CHAR_HEX_STRING_HERE
JWT_EXPIRES_IN=1h
JWT_REFRESH_EXPIRES_IN=7d

# Session Secret - MUST be cryptographically secure random string (REQUIRED)
# Generate with: openssl rand -hex 32
SESSION_SECRET=GENERATE_SECURE_32_CHAR_HEX_STRING_HERE
SESSION_TIMEOUT_HOURS=24

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment
NODE_ENV=production

# Server Port
PORT=3000

# Frontend URLs (for CORS configuration)
FRONTEND_URL=https://app.yourdomain.com
ADDITIONAL_CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Base URL for email links and webhooks
BASE_URL=https://api.yourdomain.com

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=1000

# Account Security
MAX_LOGIN_ATTEMPTS=5
LOCK_TIME_MINUTES=30
PASSWORD_RESET_EXPIRES_MINUTES=60
EMAIL_VERIFICATION_EXPIRES_HOURS=24

# =============================================================================
# EMAIL CONFIGURATION (REQUIRED FOR USER REGISTRATION)
# =============================================================================

# SMTP Configuration (using Gmail as example)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=noreply@yourdomain.com
SMTP_PASS=your_gmail_app_password_here
FROM_EMAIL=noreply@yourdomain.com
FROM_NAME=Irrigation Pro

# Alternative: Using SendGrid
# SMTP_HOST=smtp.sendgrid.net
# SMTP_PORT=587
# SMTP_USER=apikey
# SMTP_PASS=your_sendgrid_api_key_here

# Alternative: Using AWS SES
# SMTP_HOST=email-smtp.us-east-1.amazonaws.com
# SMTP_PORT=587
# SMTP_USER=your_aws_access_key_id
# SMTP_PASS=your_aws_secret_access_key

# =============================================================================
# FILE STORAGE CONFIGURATION
# =============================================================================

# AWS S3 Configuration (for file uploads)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_S3_BUCKET=your-irrigation-pro-bucket

# Alternative: Local file storage (not recommended for production)
# STORAGE_TYPE=local
# UPLOAD_PATH=/var/www/uploads

# =============================================================================
# PAYMENT PROCESSING (OPTIONAL)
# =============================================================================

# Stripe Configuration
STRIPE_SECRET_KEY=sk_live_your_stripe_secret_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret_here
STRIPE_PUBLISHABLE_KEY=pk_live_your_stripe_publishable_key_here

# =============================================================================
# MONITORING & ALERTING (OPTIONAL)
# =============================================================================

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30000
ENABLE_HEALTH_CHECKS=true

# Alert Webhook URLs
ALERT_WEBHOOK_URL=https://hooks.slack.com/your-webhook-url
ERROR_WEBHOOK_URL=https://hooks.slack.com/your-error-webhook-url

# Application Performance Monitoring (APM)
# NEW_RELIC_LICENSE_KEY=your_new_relic_license_key
# DATADOG_API_KEY=your_datadog_api_key
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level (error, warn, info, verbose, debug)
LOG_LEVEL=info

# Log File Paths (optional, defaults to stdout)
LOG_FILE=/var/log/irrigation-pro/app.log
ERROR_LOG_FILE=/var/log/irrigation-pro/error.log

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL Configuration (if terminating SSL at application level)
# SSL_CERT_PATH=/etc/ssl/certs/yourdomain.com.crt
# SSL_KEY_PATH=/etc/ssl/private/yourdomain.com.key

# Force HTTPS redirects
FORCE_HTTPS=true

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Database Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=your-irrigation-backups

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/Disable Features
ENABLE_REGISTRATION=true
ENABLE_PASSWORD_RESET=true
ENABLE_EMAIL_VERIFICATION=true
ENABLE_TWO_FACTOR_AUTH=false
ENABLE_API_DOCUMENTATION=false
ENABLE_RATE_LIMITING=true
ENABLE_REQUEST_LOGGING=true

# =============================================================================
# THIRD-PARTY INTEGRATIONS (OPTIONAL)
# =============================================================================

# Google Maps API (for address geocoding)
GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here

# Twilio (for SMS notifications)
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=+1234567890

# Weather API (for scheduling optimization)
WEATHER_API_KEY=your_weather_api_key

# =============================================================================
# DEVELOPMENT/TESTING OVERRIDES
# =============================================================================

# These should be empty or removed in production

# Debug Settings (REMOVE IN PRODUCTION)
# DEBUG=irrigation-pro:*
# NODE_OPTIONS=--inspect

# Testing Database (REMOVE IN PRODUCTION)
# TEST_DATABASE_URL=

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. NEVER commit this file with real secrets to version control
# 2. Use environment-specific configuration management (Docker secrets, K8s secrets, etc.)
# 3. Regularly rotate JWT_SECRET and SESSION_SECRET
# 4. Use strong, unique passwords for all services
# 5. Enable SSL/TLS for all connections
# 6. Implement proper backup and disaster recovery procedures
# 7. Monitor and alert on security events
# 8. Keep all dependencies updated
# 9. Use least privilege principle for database users
# 10. Implement proper firewall rules and network security

# =============================================================================
# DEPLOYMENT CHECKLIST
# =============================================================================

# Before deploying to production, ensure:
# [ ] All secrets are properly generated and secured
# [ ] Database is configured with proper user permissions
# [ ] Redis is configured and accessible
# [ ] SMTP/email service is configured and tested
# [ ] File storage (S3) is configured with proper IAM permissions
# [ ] SSL certificates are installed and configured
# [ ] Monitoring and alerting are set up
# [ ] Backups are configured and tested
# [ ] Load balancer/reverse proxy is configured
# [ ] Firewall rules are properly configured
# [ ] DNS records are configured
# [ ] Health checks are working
# [ ] Log rotation is configured
# [ ] Process manager (PM2, systemd) is configured